@using AutoMapper
@using Microsoft.AspNetCore.Components.Forms
@using TimeTracker.Web.Blazor.Server.Components.Elements
@using TimeTracker.Web.Blazor.Server.Modals.Models
@using TimerTracker.BE.Web.BusinessLogic.Models.DTOs

@inherits BaseSaveViewModal
@inject IHttpClientFactory HttpClientFactory

<BaseModal @bind-Visible=Visible Title=@Title>
    <BodyContent>
        <EditForm EditContext="@editContext" OnValidSubmit="@save_Click">
            <DataAnnotationsValidator />

            <h6>Name</h6>
            <MTextBox @bind-Value="@Project.Name"></MTextBox>
            <ValidationMessage For="@(() => Project.Name)" />

            <MButton Text="Save" OnClick="save_Click" IsDisabled="@(!isFormValid)" />
        </EditForm>
    </BodyContent>
</BaseModal>

@code {

    [Parameter, EditorRequired]
    public ProjectBaseDto Project { get; set; }


    protected override async Task performActionOnOpenAsync()
    {
        editContext = new EditContext(Project);
        editContext.OnFieldChanged += onFieldChanged;
    }

    protected override void performActionOnClose()
    {
        if (editContext != null)
            editContext.OnFieldChanged -= onFieldChanged;
    }

    protected async override void save_Click()
    {
        if (_httpClient != null)
        {
            var urlApi = "/api/v1/project";
            if (Project.Id != 0)
            {
                var result = await _httpClient.PutAsJsonAsync<ProjectBaseDto>(urlApi, Project);
            }
            else
            {
                var projectConvert = _mapper.Map<ProjectInsertDto>(Project);
                var result = await _httpClient.PostAsJsonAsync<ProjectInsertDto>(urlApi, projectConvert);
            }
            await closeModalAsync();
        }
    }
}
