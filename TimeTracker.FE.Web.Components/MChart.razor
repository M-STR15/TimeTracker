@using Microsoft.JSInterop
@using TimeTracker.FE.Web.Components.Interops
@using TimeTracker.FE.Web.Components.Models

<script src="js/mchart2.js"></script>

@if (shouldRenderChart)
{
    <canvas @ref="canvasRef"></canvas>
}

@code {
    private ElementReference canvasRef;
    [Inject] private ChartJsInterop _chartJsInterop { get; set; }

    [Parameter, EditorRequired]
    public object? Labels { get; set; }
    [Parameter, EditorRequired]
    public object? Dataset { get; set; }

    private bool shouldRenderChart = false; // Výchozí stav je, že graf se nezobrazí

    protected async override void OnParametersSet()
    {
        base.OnParametersSet();

        if (Labels != null && Dataset != null)
        {
            var config = new
            {
                Options = new
                {
                    Responsive = true,
                    Scales = new
                    {
                        YAxes = new[]
                       {
                        new { Ticks = new {
                            BeginAtZero=true
                        }
}
                    }
                    }
                },
                Data = new
                {
                    Datasets = Dataset,
                    Labels = Labels
                }
            };

            if (_chartJsInterop is not null && config != null)
            {
                await _chartJsInterop.SetupChartAsync(canvasRef, config);
                shouldRenderChart = true;
                StateHasChanged();
            }
        }
    }
    public async ValueTask DisposeAsync()
    {
        if (_chartJsInterop is not null)
            await _chartJsInterop.DisposeAsync();
    }
}